{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","pokemons","pokePicture","getPokePicture","e","a","axios","get","target","value","response","setState","data","sprites","front_default","getPokemons","results","console","log","this","popkeList","map","poke","url","name","className","onChange","src","alt","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAKqBA,E,4MAEnBC,MAAQ,CACNC,SAAS,GACTC,YAAY,I,EAOdC,e,uCAAiB,WAAOC,GAAP,eAAAC,EAAA,sEACQC,IAAMC,IAAIH,EAAEI,OAAOC,OAD3B,OACTC,EADS,OAEf,EAAKC,SAAS,CAACT,YAAaQ,EAASE,KAAKC,QAAQC,gBAFnC,2C,wDAKjBC,Y,sBAAc,4BAAAV,EAAA,sEACWC,IAAMC,IAAI,wDADrB,OACNG,EADM,OAEZ,EAAKC,SAAS,CAACV,SAAUS,EAASE,KAAKI,UACvCC,QAAQC,IAAI,aAAcR,EAASE,KAAKI,SAH5B,2C,uDATd,WACEG,KAAKJ,gB,oBAaP,WACE,IAAMK,EAAYD,KAAKnB,MAAMC,SAASoB,KAAI,SAACC,GACzC,OACE,wBAAwBb,MAAOa,EAAKC,IAApC,SACGD,EAAKE,MADKF,EAAKE,SAKtB,OACE,sBAAKC,UAAU,MAAf,UACE,0CACA,yBAAQC,SAAWP,KAAKhB,eAAxB,UACE,0DACCiB,KACM,uBACRD,KAAKnB,MAAME,aACZ,qBAAKyB,IAAKR,KAAKnB,MAAME,YAAa0B,IAAK,wB,GArCdC,IAAMC,WCOxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.506d54a8.chunk.js","sourcesContent":["import React from 'react';\nimport \"./App.css\"\nimport axios from 'axios';\n\n\nexport default class App extends React.Component {\n\n  state = {\n    pokemons:[],\n    pokePicture:''\n  }\n\n  componentDidMount(){\n    this.getPokemons()\n  }\n\n  getPokePicture = async (e) => {\n    const response = await axios.get(e.target.value)\n    this.setState({pokePicture: response.data.sprites.front_default})\n  }\n\n  getPokemons = async()=>{\n    const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=151&offset=0')\n    this.setState({pokemons: response.data.results})\n    console.log('Pokemons: ', response.data.results)\n  }\n  render(){\n    const popkeList = this.state.pokemons.map((poke)=>{\n      return(\n        <option key={poke.name} value={poke.url}>\n          {poke.name}\n        </option>\n      )\n    })\n    return (\n      <div className=\"App\">\n        <h1>Pokemons</h1>\n        <select onChange= {this.getPokePicture}>\n          <option>Selecione um pokemon</option>\n          {popkeList}\n        </select><br></br>\n        {this.state.pokePicture &&\n        <img src={this.state.pokePicture} alt={'Foto pokemon'}/>\n        }\n      </div>\n    );\n  }\n  \n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}